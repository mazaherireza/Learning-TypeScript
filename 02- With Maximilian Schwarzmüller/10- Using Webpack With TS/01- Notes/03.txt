... tsconfig.json ... certain things are configured.

"compilerOptions": {
  "target": <-------  set to es5 or es6

  "module": <------- es2015 or es6
  ...
  "outDir": <------- ... you could change ... if you want to compile your code to a different directory.
  "rootDir" <----- ... don't need ... because Webpack will take over there 
  Webpack will determine where your root files are.

... a new configuration file ... 
-----------------
webpack.config.js

... Webpack needs to be configured to work correctly.
... this configuration file uses JS and actually uses Node.js features 
 
module.exports = {};
... with which file, your entire project starts?
... entry point ... index.ts file ...this file should be executed first
Webpack ... will have a look at the imports in this file and go to these files 
and have a look at their imports ... until it knows all files your porject uses in the end
... then it will go through the file contents ... and compile them with the help of ts-loader package.

... you should actullay remove all the .js extensions in all the imports.
  
module.exports = {
  entry: "./src/index.ts",
  output: {
    filename: "bundle.[contenthash].js" <------- Single JS file which will be produced in the end.
    ... dynamic parts for example contenthash to tell Webpack to automatically create a unique hash 
    for every build, which can help you with caching in the browser.

    path: path.resolve(__dirname, "dist")
    <---------- Where the output should be written to ... match path in tsconfig.json ("outDir")
    ... dist folder
    Webpack wants an absolute path here ... we can use Node.js module 
}

Any extra functionality like compiling TS to JS has to be taught to Webpack.