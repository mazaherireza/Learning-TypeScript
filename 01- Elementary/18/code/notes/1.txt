Common Key Value Pairs
----------------------
When we put type members in a union, 
TypeScript will only allow us to use the common methods and properties that all members of the union share. 

This rule also applies to type objects that we define. 
Take this code:

type Goose = { 
  isPettable: boolean; 
  hasFeathers: boolean;
  canThwartAPicnic: boolean;
}
 
type Moose = {
  isPettable: boolean; 
  hasHoofs: boolean;
}
 
const pettingZooAnimal: Goose | Moose = { isPettable: true };
 
console.log(pettingZooAnimal.isPettable); // No TypeScript error
console.log(pettingZooAnimal.hasHoofs); // TypeScript error

Any properties or methods that are not shared by all of the union's members won't be allowed and 
will produce a TypeScript error.

